# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]

jobs:
  
  build:

    runs-on: ubuntu-latest


    steps:
    - uses: actions/checkout@v2
            
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . 
    
    - name: Run Bandit to check for bad packages
      run: |
        bandit lambd_function.py
        
    - name: Run safety to check for anything untoward
      run: |
        safety check
        
    - name: Run Unit Tests
      run: |
        # Run the Unit Test file for the function
        python -m unittest "unit_tests.py"
    
  Package-File-and-Push-to-S3:
  
    runs-on: ubuntu-latest
    
    steps:
      
      - uses: actions/checkout@v2
      - name: List the files located in the directory
        run: |
          ls ${{ github.workspace }}
          
      - name: Make the directory
        run: |
          mkdir -p ./artifacts/${{ github.repository }}
          ls ${{ github.workspace }}
      
      - name: Create the Zip File
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r package.zip lambda_function.py
          
      - name: move the zip file to the artifacts directory
        run: mv package.zip ./artifacts
        
      - name: List files in the directory to ensure it has been moved
        run:
          cd ./artifacts && ls
      
      - name: Push the Zip to S3 Bucket
        uses: jakejarvis/s3-sync-action@v0.3.1
        env:
          SOURCE_DIR: './artifacts/.'
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_KEY }}
      
      - name: Job Statistics and Results
        run: echo "Job complete.  The status of the job is ${{ job.status }}"
            
      
      
  
    
    
